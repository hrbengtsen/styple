// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test DropdownMenu should render as expected 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    style="pointer-events: none;"
  >
    <span
      aria-hidden="true"
      data-aria-hidden="true"
      data-radix-focus-guard=""
      style="outline: none; opacity: 0; position: fixed; pointer-events: none;"
      tabindex="0"
    />
    <div>
      <button
        aria-controls="radix-3"
        aria-expanded="true"
        aria-haspopup="menu"
        aria-hidden="true"
        data-aria-hidden="true"
        data-state="open"
        id="radix-2"
        type="button"
      >
        trigger
      </button>
      <div>
        <div
          data-radix-popper-content-wrapper=""
          style="position: fixed; top: 0px; left: 0px; opacity: 0; transform: translate3d(0, -200%, 0);"
        >
          <div
            aria-labelledby="radix-2"
            aria-orientation="vertical"
            class="c-iIplWR c-kTEAKz"
            data-orientation="vertical"
            data-state="open"
            dir="ltr"
            id="radix-3"
            role="menu"
            style="outline: none; --radix-dropdown-menu-content-transform-origin: var(--radix-popper-transform-origin); animation: none; pointer-events: auto;"
            tabindex="-1"
          >
            <div
              class="c-kvFqYU c-kdqdDL"
            >
              label
            </div>
            <div
              class="c-kvFqYU c-ekPsDm"
              data-orientation="vertical"
              data-radix-collection-item=""
              role="menuitem"
              tabindex="-1"
            >
              item
            </div>
            <div
              aria-checked="false"
              class="c-kvFqYU c-bMgPth c-kvFqYU-iciKXky-css"
              data-orientation="vertical"
              data-radix-collection-item=""
              data-state="unchecked"
              role="menuitemcheckbox"
              tabindex="-1"
            >
              checkbox
              <button
                aria-checked="false"
                class="c-kZKMpS"
                data-state="unchecked"
                role="switch"
                type="button"
                value="on"
              >
                <span
                  class="c-cCodCR"
                  data-state="unchecked"
                />
              </button>
            </div>
            <div
              aria-orientation="horizontal"
              class="c-eMJvvr"
              role="separator"
            />
          </div>
        </div>
      </div>
    </div>
    <span
      aria-hidden="true"
      data-aria-hidden="true"
      data-radix-focus-guard=""
      style="outline: none; opacity: 0; position: fixed; pointer-events: none;"
      tabindex="0"
    />
  </body>,
  "container": <div>
    <button
      aria-controls="radix-3"
      aria-expanded="true"
      aria-haspopup="menu"
      aria-hidden="true"
      data-aria-hidden="true"
      data-state="open"
      id="radix-2"
      type="button"
    >
      trigger
    </button>
    <div>
      <div
        data-radix-popper-content-wrapper=""
        style="position: fixed; top: 0px; left: 0px; opacity: 0; transform: translate3d(0, -200%, 0);"
      >
        <div
          aria-labelledby="radix-2"
          aria-orientation="vertical"
          class="c-iIplWR c-kTEAKz"
          data-orientation="vertical"
          data-state="open"
          dir="ltr"
          id="radix-3"
          role="menu"
          style="outline: none; --radix-dropdown-menu-content-transform-origin: var(--radix-popper-transform-origin); animation: none; pointer-events: auto;"
          tabindex="-1"
        >
          <div
            class="c-kvFqYU c-kdqdDL"
          >
            label
          </div>
          <div
            class="c-kvFqYU c-ekPsDm"
            data-orientation="vertical"
            data-radix-collection-item=""
            role="menuitem"
            tabindex="-1"
          >
            item
          </div>
          <div
            aria-checked="false"
            class="c-kvFqYU c-bMgPth c-kvFqYU-iciKXky-css"
            data-orientation="vertical"
            data-radix-collection-item=""
            data-state="unchecked"
            role="menuitemcheckbox"
            tabindex="-1"
          >
            checkbox
            <button
              aria-checked="false"
              class="c-kZKMpS"
              data-state="unchecked"
              role="switch"
              type="button"
              value="on"
            >
              <span
                class="c-cCodCR"
                data-state="unchecked"
              />
            </button>
          </div>
          <div
            aria-orientation="horizontal"
            class="c-eMJvvr"
            role="separator"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
