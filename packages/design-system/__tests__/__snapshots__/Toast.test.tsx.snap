// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Toast should render as expected 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        aria-label="Notifications (F8)"
        role="region"
        style=""
        tabindex="-1"
      >
        <ol
          class="c-dcarIp"
          tabindex="-1"
        >
          <li
            aria-atomic="true"
            aria-live="off"
            class="c-kKuJpB"
            data-state="open"
            data-swipe-direction="right"
            role="status"
            style="user-select: none;"
            tabindex="0"
          >
            <div
              class="c-keFkcS c-keFkcS-iiqCzBn-css"
            >
              This is a Toast
            </div>
            <button
              aria-label="Close button"
              class="c-jVSBjD c-jVSBjD-dKyYYg-size-circle c-jVSBjD-grEzJK-highlight-true c-jVSBjD-zoiF-variant-normal c-jVSBjD-grEzJK-cv c-jVSBjD-ijuVzvF-css"
              type="button"
            >
              <svg
                class="lucide lucide-x"
                fill="none"
                height="20"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                style="vertical-align: middle;"
                viewBox="0 0 24 24"
                width="20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <line
                  x1="18"
                  x2="6"
                  y1="6"
                  y2="18"
                />
                <line
                  x1="6"
                  x2="18"
                  y1="6"
                  y2="18"
                />
              </svg>
            </button>
          </li>
        </ol>
      </div>
    </div>
    <div
      aria-atomic="true"
      aria-live="assertive"
      role="status"
      style="position: absolute; border: 0px; width: 1px; height: 1px; padding: 0px; margin: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; word-wrap: normal;"
    />
  </body>,
  "container": <div>
    <div
      aria-label="Notifications (F8)"
      role="region"
      style=""
      tabindex="-1"
    >
      <ol
        class="c-dcarIp"
        tabindex="-1"
      >
        <li
          aria-atomic="true"
          aria-live="off"
          class="c-kKuJpB"
          data-state="open"
          data-swipe-direction="right"
          role="status"
          style="user-select: none;"
          tabindex="0"
        >
          <div
            class="c-keFkcS c-keFkcS-iiqCzBn-css"
          >
            This is a Toast
          </div>
          <button
            aria-label="Close button"
            class="c-jVSBjD c-jVSBjD-dKyYYg-size-circle c-jVSBjD-grEzJK-highlight-true c-jVSBjD-zoiF-variant-normal c-jVSBjD-grEzJK-cv c-jVSBjD-ijuVzvF-css"
            type="button"
          >
            <svg
              class="lucide lucide-x"
              fill="none"
              height="20"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              style="vertical-align: middle;"
              viewBox="0 0 24 24"
              width="20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <line
                x1="18"
                x2="6"
                y1="6"
                y2="18"
              />
              <line
                x1="6"
                x2="18"
                y1="6"
                y2="18"
              />
            </svg>
          </button>
        </li>
      </ol>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
