// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Slider should render as expected 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        aria-disabled="false"
        class="c-bXudAR"
        data-orientation="horizontal"
        dir="ltr"
        style="--radix-slider-thumb-transform: translateX(-50%);"
      >
        <span
          class="c-liRDpE"
          data-orientation="horizontal"
        >
          <span
            class="c-giYQFj"
            data-orientation="horizontal"
            style="left: 0%; right: 100%;"
          />
        </span>
        <span
          style="transform: var(--radix-slider-thumb-transform); position: absolute; left: calc(0% + 0px);"
        >
          <span
            aria-orientation="horizontal"
            aria-valuemax="100"
            aria-valuemin="0"
            aria-valuenow="0"
            class="c-iJmMoE"
            data-orientation="horizontal"
            data-radix-collection-item=""
            role="slider"
            style=""
            tabindex="0"
          />
        </span>
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      aria-disabled="false"
      class="c-bXudAR"
      data-orientation="horizontal"
      dir="ltr"
      style="--radix-slider-thumb-transform: translateX(-50%);"
    >
      <span
        class="c-liRDpE"
        data-orientation="horizontal"
      >
        <span
          class="c-giYQFj"
          data-orientation="horizontal"
          style="left: 0%; right: 100%;"
        />
      </span>
      <span
        style="transform: var(--radix-slider-thumb-transform); position: absolute; left: calc(0% + 0px);"
      >
        <span
          aria-orientation="horizontal"
          aria-valuemax="100"
          aria-valuemin="0"
          aria-valuenow="0"
          class="c-iJmMoE"
          data-orientation="horizontal"
          data-radix-collection-item=""
          role="slider"
          style=""
          tabindex="0"
        />
      </span>
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
