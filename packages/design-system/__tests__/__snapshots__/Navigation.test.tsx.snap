// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Navbar should render as expected 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        data-state="closed"
      >
        <div
          class="c-lesPJm"
        >
          Basic navbar
          <div
            class="c-lesPJm c-lesPJm-ibzxrHk-css"
          >
            Regular content
          </div>
          <button
            aria-controls="radix-:r0:"
            aria-expanded="false"
            aria-label="Navigation menu toggle"
            class="c-bcMgnR c-bcMgnR-igJqlz-css"
            data-state="closed"
            type="button"
          >
            <span />
            <span />
            <span />
            <span />
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      data-state="closed"
    >
      <div
        class="c-lesPJm"
      >
        Basic navbar
        <div
          class="c-lesPJm c-lesPJm-ibzxrHk-css"
        >
          Regular content
        </div>
        <button
          aria-controls="radix-:r0:"
          aria-expanded="false"
          aria-label="Navigation menu toggle"
          class="c-bcMgnR c-bcMgnR-igJqlz-css"
          data-state="closed"
          type="button"
        >
          <span />
          <span />
          <span />
          <span />
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Test Sidebar should render as expected 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="c-lesPJm"
      >
        Basic sidebar
        <div
          class="c-lesPJm c-lesPJm-ifFZihQ-css"
        >
          Regular content
        </div>
        <button
          aria-controls="radix-:r1:"
          aria-expanded="false"
          aria-haspopup="dialog"
          class="c-jVSBjD c-jVSBjD-dWmsQj-size-md c-jVSBjD-eskvya-ghost-true c-jVSBjD-zoiF-variant-normal c-jVSBjD-jjweoh-cv c-jVSBjD-ihteOKz-css"
          data-state="closed"
          type="button"
        >
          <svg
            class="lucide lucide-menu"
            fill="none"
            height="24"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            style="vertical-align: middle;"
            viewBox="0 0 24 24"
            width="24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <line
              x1="4"
              x2="20"
              y1="12"
              y2="12"
            />
            <line
              x1="4"
              x2="20"
              y1="6"
              y2="6"
            />
            <line
              x1="4"
              x2="20"
              y1="18"
              y2="18"
            />
          </svg>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-lesPJm"
    >
      Basic sidebar
      <div
        class="c-lesPJm c-lesPJm-ifFZihQ-css"
      >
        Regular content
      </div>
      <button
        aria-controls="radix-:r1:"
        aria-expanded="false"
        aria-haspopup="dialog"
        class="c-jVSBjD c-jVSBjD-dWmsQj-size-md c-jVSBjD-eskvya-ghost-true c-jVSBjD-zoiF-variant-normal c-jVSBjD-jjweoh-cv c-jVSBjD-ihteOKz-css"
        data-state="closed"
        type="button"
      >
        <svg
          class="lucide lucide-menu"
          fill="none"
          height="24"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          style="vertical-align: middle;"
          viewBox="0 0 24 24"
          width="24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <line
            x1="4"
            x2="20"
            y1="12"
            y2="12"
          />
          <line
            x1="4"
            x2="20"
            y1="6"
            y2="6"
          />
          <line
            x1="4"
            x2="20"
            y1="18"
            y2="18"
          />
        </svg>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
